# Generated by Django 3.1.7 on 2021-03-16 11:32

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentRef',
            fields=[
                ('AGENTID', models.AutoField(primary_key=True, serialize=False)),
                ('AgentName', models.CharField(max_length=500, verbose_name='Agent Name')),
            ],
            options={
                'verbose_name': 'AGENT',
                'verbose_name_plural': 'AGENT',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('AreasIDs', models.AutoField(primary_key=True, serialize=False)),
                ('AreaName', models.CharField(max_length=500, verbose_name='Area Name')),
            ],
            options={
                'verbose_name': 'AREA',
                'verbose_name_plural': 'AREA',
            },
        ),
        migrations.CreateModel(
            name='BannerImages',
            fields=[
                ('BannerID', models.AutoField(primary_key=True, serialize=False)),
                ('BannerName', models.CharField(default='', max_length=250)),
                ('BannerImageItem', models.ImageField(default='', upload_to='homepagebanners')),
            ],
            options={
                'verbose_name': 'HOME PAGE BANNER',
                'verbose_name_plural': 'HOME PAGE BANNER',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('blogid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500, verbose_name='Blog Title')),
                ('url', models.CharField(max_length=500, verbose_name='Blog URL')),
                ('summary', models.TextField(verbose_name='Blog Summary')),
                ('blogimage', models.ImageField(default='', upload_to='blogbanner')),
                ('point1', models.CharField(blank=True, max_length=500, verbose_name='point 1')),
                ('point2', models.CharField(blank=True, max_length=500, verbose_name='point 2')),
                ('point3', models.CharField(blank=True, max_length=500, verbose_name='point 3')),
                ('point4', models.CharField(blank=True, max_length=500, verbose_name='point 4')),
                ('point5', models.CharField(blank=True, max_length=500, verbose_name='point 5')),
                ('point6', models.CharField(blank=True, max_length=500, verbose_name='point 6')),
                ('point7', models.CharField(blank=True, max_length=500, verbose_name='point 7')),
                ('point8', models.CharField(blank=True, max_length=500, verbose_name='point 8')),
                ('point9', models.CharField(blank=True, max_length=500, verbose_name='point 9')),
                ('point10', models.CharField(blank=True, max_length=500, verbose_name='point 10')),
                ('desc1', models.TextField(blank=True, verbose_name='Description 1')),
                ('desc2', models.TextField(blank=True, verbose_name='Description 2')),
                ('desc3', models.TextField(blank=True, verbose_name='Description 3')),
                ('desc4', models.TextField(blank=True, verbose_name='Description 4')),
                ('desc5', models.TextField(blank=True, verbose_name='Description 5')),
                ('desc6', models.TextField(blank=True, verbose_name='Description 6')),
                ('desc7', models.TextField(blank=True, verbose_name='Description 7')),
                ('desc8', models.TextField(blank=True, verbose_name='Description 8')),
                ('desc9', models.TextField(blank=True, verbose_name='Description 9')),
                ('desc10', models.TextField(blank=True, verbose_name='Description 10')),
                ('conclusiontopic', models.CharField(blank=True, max_length=500, verbose_name='Conclusion Topic')),
                ('conclusiondesc', models.TextField(blank=True, verbose_name='Conclusion Description')),
            ],
            options={
                'verbose_name': 'BLOGS',
                'verbose_name_plural': 'BLOGS',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('CTID', models.AutoField(primary_key=True, serialize=False)),
                ('CityName', models.CharField(max_length=200)),
                ('STID', models.IntegerField()),
                ('BitStatus', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'CITY',
                'verbose_name_plural': 'CITY',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('CONTACTID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=500, verbose_name='Name')),
                ('Contact', models.CharField(max_length=500, verbose_name='Contact Number')),
                ('Email', models.CharField(max_length=500, verbose_name='Email')),
                ('Message', models.CharField(max_length=1000, verbose_name='Message')),
            ],
            options={
                'verbose_name': 'CONTACT US',
                'verbose_name_plural': 'CONTACT US',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FAQs',
            fields=[
                ('FAQID', models.AutoField(primary_key=True, serialize=False)),
                ('Question', models.TextField(default='')),
                ('Answer', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'FAQS',
                'verbose_name_plural': 'FAQS',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('FeedBackID', models.AutoField(primary_key=True, serialize=False)),
                ('Experience', models.CharField(max_length=250)),
                ('Comment', models.CharField(max_length=500)),
                ('Name', models.CharField(max_length=250)),
                ('Email', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'FEEDBACK',
                'verbose_name_plural': 'FEEDBACK',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FurnishedType',
            fields=[
                ('TypeID', models.AutoField(primary_key=True, serialize=False)),
                ('TypeName', models.CharField(max_length=250, verbose_name='Furnished Type')),
                ('BitStatus', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'FURNISHED TYPE',
                'verbose_name_plural': 'FURNISHED TYPE',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('GID', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('image', models.ImageField(default='', upload_to='galleryimages')),
            ],
            options={
                'verbose_name': 'GALLERY PICTURES',
                'verbose_name_plural': 'GALLERY PICTURES',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GalleryVideos',
            fields=[
                ('vidid', models.AutoField(primary_key=True, serialize=False)),
                ('videotitle', models.CharField(max_length=500)),
                ('video', models.FileField(default='', upload_to='videosofgallery')),
            ],
            options={
                'verbose_name': 'GALLERY VIDEOS',
                'verbose_name_plural': 'GALLERY VIDEOS',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LocationsRef',
            fields=[
                ('LOCID', models.AutoField(primary_key=True, serialize=False)),
                ('LocationName', models.CharField(max_length=500, verbose_name='Location Name')),
                ('BitStatus', models.IntegerField(default=1)),
                ('LocationCity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.cities', verbose_name='Select City')),
            ],
            options={
                'verbose_name': 'LOCATION',
                'verbose_name_plural': 'LOCATION',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PropertyTypeRef',
            fields=[
                ('TypeID', models.AutoField(primary_key=True, serialize=False)),
                ('TypeName', models.CharField(max_length=250, verbose_name='Property Type')),
                ('BitStatus', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'PROPERTY TYPE',
                'verbose_name_plural': 'PROPERTY TYPE',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RoleMaster',
            fields=[
                ('RoleID', models.AutoField(primary_key=True, serialize=False)),
                ('RoleName', models.CharField(max_length=250, verbose_name='Role')),
            ],
            options={
                'verbose_name': 'AGENT ROLE',
                'verbose_name_plural': 'AGENT ROLE',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('STID', models.AutoField(primary_key=True, serialize=False)),
                ('StateName', models.CharField(max_length=200, verbose_name='State Name')),
                ('BitStatus', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'STATE',
                'verbose_name_plural': 'STATE',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('TestimonialID', models.AutoField(primary_key=True, serialize=False)),
                ('ClientImage', models.ImageField(default='', upload_to='clientphotos')),
                ('ClientName', models.CharField(default='', max_length=250)),
                ('ClientPosition', models.CharField(default='', max_length=500)),
                ('ClientWords', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'TESTIMONIAL',
                'verbose_name_plural': 'TESTIMONIAL',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('PropertyID', models.AutoField(primary_key=True, serialize=False)),
                ('TxnType', models.CharField(max_length=200, verbose_name='Buy / Rent')),
                ('Title', models.CharField(max_length=5000, verbose_name='Property Title')),
                ('PropertyImage', models.ImageField(default='', upload_to='propertybanner')),
                ('Price', models.FloatField(verbose_name='Price (in Rs.)')),
                ('PropertyAddress', models.TextField(verbose_name='Property Address')),
                ('ShortDescription', models.CharField(max_length=300, verbose_name='Short Description')),
                ('Availability', models.CharField(max_length=250)),
                ('CarpetArea', models.FloatField(verbose_name='Carpet Area')),
                ('FloorNumber', models.CharField(default='', max_length=250, verbose_name='Floor Number')),
                ('TransactionType', models.CharField(default='', max_length=250, verbose_name='Transaction Type')),
                ('TotalFloor', models.CharField(default='', max_length=250, verbose_name='Total Floors')),
                ('PropertySize', models.FloatField(verbose_name='Super Builtup')),
                ('PossessionStatus', models.CharField(default='', max_length=250, verbose_name='Posession Status')),
                ('RateSQFT', models.FloatField(verbose_name='Rate / Sqft')),
                ('BuiltUpArea', models.FloatField(verbose_name='Builtup Area')),
                ('Balcony', models.IntegerField()),
                ('Bathroom', models.IntegerField()),
                ('Bedroom', models.IntegerField()),
                ('OurProperty', models.BooleanField(default=False, verbose_name='Is it Our Property?')),
                ('InGallery', models.BooleanField(default=False, verbose_name='In Gallery?')),
                ('AgentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.agentref', verbose_name='Agent')),
                ('Area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.area', verbose_name='Area Location')),
                ('Furnished', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.furnishedtype', verbose_name='Furnished')),
                ('PropertyLocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.locationsref', verbose_name='Property Location')),
                ('PropertyType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.propertytyperef', verbose_name='Property Type')),
            ],
            options={
                'verbose_name': 'PROPERTY',
                'verbose_name_plural': 'PROPERTIES',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NearByStations',
            fields=[
                ('StationID', models.AutoField(primary_key=True, serialize=False)),
                ('MetroTrain', models.CharField(max_length=250, verbose_name='Metro Train')),
                ('Schools', models.CharField(max_length=250)),
                ('Airport', models.CharField(max_length=250)),
                ('CreatedBy', models.CharField(max_length=250)),
                ('UpdatedAt', models.DateTimeField(auto_now=True)),
                ('PropertyID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.property', verbose_name='Select Property')),
            ],
            options={
                'verbose_name': 'NEAR BY STATION',
                'verbose_name_plural': 'NEAR BY STATION',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='locationsref',
            name='LocationState',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.states', verbose_name='Select State'),
        ),
        migrations.CreateModel(
            name='Facilities',
            fields=[
                ('FacilityID', models.AutoField(primary_key=True, serialize=False)),
                ('FacilityName', models.CharField(max_length=250, verbose_name='Facility Name')),
                ('CreatedBy', models.CharField(max_length=250)),
                ('UpdatedAt', models.DateTimeField(auto_now=True)),
                ('FacilitiesPropertyID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.property', verbose_name='Select Property')),
            ],
            options={
                'verbose_name': 'FACILITY',
                'verbose_name_plural': 'FACILITY',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='area',
            name='LocationID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.locationsref', verbose_name='Select Location'),
        ),
        migrations.AddField(
            model_name='agentref',
            name='AgentLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locationsadmin.locationsref', verbose_name='Agent Location'),
        ),
    ]
